version: 0.0.{build}

# Do not build on tags (GitHub and BitBucket)
skip_tags: true

pull_requests:
  do_not_increment_build_number: true

branches:
  only:
  - master

image: Previous Visual Studio 2017

init:
- cmd: git config --global core.autocrlf true

nuget:
  project_feed: true

environment:
  sonarcloudtoken:
    secure: JA/uVC3EvWgRnDuc5anaS1PMfRCxGNme+jAUP8x4W9qOKp+yhQWnn2gSlTvESn7y
  github_auth_token:
    secure: 9FVpjy/unBuNEqqtSVA1IAtuYhJr5MI0Gt03rkH4cqcQYQgFzXwac2b85z4MSH9E

before_build:
  - dotnet --version
  - dotnet restore
  - choco install "msbuild-sonarqube-runner" -y

build_script:
  - ps: |
      Write-Host "APPVEYOR_REPO_NAME: $ENV:APPVEYOR_REPO_NAME"
      Write-Host "APPVEYOR_PULL_REQUEST_HEAD_REPO_NAME: $ENV:APPVEYOR_PULL_REQUEST_HEAD_REPO_NAME"
      if ($ENV:APPVEYOR_PULL_REQUEST_NUMBER) {
        if ($ENV:APPVEYOR_PULL_REQUEST_HEAD_REPO_NAME -eq $ENV:APPVEYOR_REPO_NAME) {
          SonarScanner.MSBuild.exe begin /k:"GitObjectDb" /v:"$ENV:APPVEYOR_BUILD_NUMBER" /o:"frblondin-github" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="$ENV:sonarcloudtoken" /d:sonar.cs.opencover.reportsPaths="$ENV:CD\tests\TestResults\coverage.GitObjectDb.ModelCodeGeneration.opencover.xml,$ENV:CD\tests\TestResults\coverage.GitObjectDb.opencover.xml" /d:sonar.pullrequest.base="$ENV:APPVEYOR_REPO_BRANCH" /d:sonar.pullrequest.branch="$ENV:APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH" /d:sonar.pullrequest.key="$ENV:APPVEYOR_PULL_REQUEST_NUMBER" /d:"sonar.language=cs"
        }
      } Else {
        SonarScanner.MSBuild.exe begin /k:"GitObjectDb" /v:"$ENV:APPVEYOR_BUILD_NUMBER" /o:"frblondin-github" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="$ENV:sonarcloudtoken" /d:sonar.cs.opencover.reportsPaths="$ENV:CD\tests\TestResults\coverage.GitObjectDb.ModelCodeGeneration.opencover.xml,$ENV:CD\tests\TestResults\coverage.GitObjectDb.opencover.xml"
      }
  - dotnet build GitObjectDb.sln --configuration Release /p:SourceLinkCreate=true /p:IncludeSymbols=true /p:IncludeSource=true /v:n
  - dotnet test tests\GitObjectDb.Tests\GitObjectDb.Tests.csproj --logger "trx;LogFileName=..\..\TestResults\TestResults.GitObjectDb.trx" /p:CollectCoverage=true --no-build --configuration Release /p:CoverletOutput=../TestResults/coverage.GitObjectDb.opencover.xml /p:CoverletOutputFormat=opencover
  - dotnet test tests\GitObjectDb.ModelCodeGeneration.Tests\GitObjectDb.ModelCodeGeneration.Tests.csproj --logger "trx;LogFileName=..\..\TestResults\TestResults.ModelCodeGeneration.GitObjectDb.trx" /p:CollectCoverage=true --no-build --configuration Release /p:CoverletOutput=../TestResults/coverage.GitObjectDb.ModelCodeGeneration.opencover.xml /p:CoverletOutputFormat=opencover
  - ps: |
      if (-Not $ENV:APPVEYOR_PULL_REQUEST_NUMBER -Or $ENV:APPVEYOR_PULL_REQUEST_HEAD_REPO_NAME -eq $ENV:APPVEYOR_REPO_NAME) {
        SonarScanner.MSBuild.exe end /d:"sonar.login=$ENV:sonarcloudtoken"
      }
  - ps: |
      if (-Not $ENV:APPVEYOR_PULL_REQUEST_NUMBER) {
        dotnet pack src\GitObjectDb --no-build --configuration Release /p:Version="$ENV:APPVEYOR_BUILD_VERSION" -o ..\..\Artifacts --include-symbols --include-source
        dotnet pack src\GitObjectDb.ModelCodeGeneration --no-build --configuration Release /p:Version="$ENV:APPVEYOR_BUILD_VERSION" -o ..\..\Artifacts --include-symbols --include-source
        dotnet pack src\GitObjectDb.ModelCodeGeneration.Attributes --no-build --configuration Release /p:Version="$ENV:APPVEYOR_BUILD_VERSION" -o ..\..\Artifacts --include-symbols --include-source
        Get-ChildItem Artifacts\*.nupkg | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }
      }

test: off

deploy:
  - provider: GitHub
    tag: $(APPVEYOR_BUILD_VERSION)
    release: GitObjectDb v$(APPVEYOR_BUILD_VERSION)
    description: $(APPVEYOR_REPO_COMMIT_MESSAGE)
    auth_token:
      secure: PSEMQITxvJW1J/gjkbgXmr9W0GWEtqHkaHjPHKwShuUL4OJiqC+o9ExosP0z3mjc # your encrypted token from GitHub
    artifact: /.*\.nupkg/            # upload all NuGet packages to release assets
    draft: false
    prerelease: true
    on:
      branch: master                 # release from master branch only

  - provider: NuGet
    api_key:
      secure: xf1ber+UZ0o2T5HTpcCBSF34j4FCqcbY11+nr1IQn3Cy94AhFyzVgVblLLw2z+uS
    skip_symbols: false
    artifact: /.*\.nupkg/
    on:
      branch: master                 # release from master branch only